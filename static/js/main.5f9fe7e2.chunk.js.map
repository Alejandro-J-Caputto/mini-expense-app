{"version":3,"sources":["contexts/ExpenseAppContext.tsx","components/expenses-date/ExpensesDate.tsx","components/expenses-item/ExpensesItem.tsx","components/expensesCard/ExpensesCard.tsx","classes/expenseModel.tsx","components/expenses-form/ExpenseForms.tsx","hooks/useForm.tsx","components/newExpense/NewExpenses.tsx","reducers/expenseActions.tsx","components/expense-filter/ExpenseFilter.tsx","components/graphic/ChartBar.tsx","components/graphic/Chart.tsx","components/expense-graphic/ExpenseGraphic.tsx","pages/MainPage/MainPage.tsx","reducers/expenseReducer.tsx","services/expensesService/useExpenseService.tsx","ExpensesApp.tsx","index.tsx"],"names":["ExpenseAppContext","createContext","ExpensesDate","date","transFormDate","Date","month","toLocaleString","day","year","className","ExpensesItem","expense","price","dispatchExpense","onClick","e","console","log","ExpensesCard","children","classes","expenseElement","target","closest","clickItemParentHandler","ExpenseModel","id","this","getMilliseconds","ExpenseForms","onSubmittedExpense","initialState","useState","formValues","setFormValues","handleInputChange","name","value","prevValues","reset","customValidator","validableInput","isValid","required","toString","trim","length","minLength","maxLength","min","max","useForm","hideForm","setHideForm","buttonFormHandler","expenseIsValid","priceIsValid","dateIsValid","onSubmit","preventDefault","alert","newExpense","htmlFor","onChange","placeholder","type","step","getFullYear","NewExpenses","useContext","payload","expenseAction","ExpenseFilter","onSetYear","filterYear","ChartBar","label","maxValue","valueWith","Math","round","style","height","Chart","dataGraphicPoints","valuesArr","map","dataP","totalMaximun","ExpenseGraphic","filteredExpenseResults","getMonth","Number","MainPage","ExpenseContext","expenseResults","setFilterYear","useEffect","localStorage","setItem","JSON","stringify","filter","exp","expenseListContent","expenseReducer","state","useExpenseService","expensesAPI","ExpensesApp","useReducer","parse","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f9fe7e2.chunk.js","sourcesContent":["import React from 'react'\nimport { createContext } from 'react';\nimport { ExpenseItems } from '../services/expensesService/useExpenseService'\n\ninterface ExpenseContextValues {\n  expenseResults: ExpenseItems[],\n  // setExpensesResults: React.Dispatch<React.SetStateAction<ExpenseItems[]>>,\n  dispatchExpense:  React.Dispatch<{\n    type: string;\n    payload: ExpenseItems;\n}>,\n  useExpenseService: () => { expensesAPI: ExpenseItems[] }\n}\n\nexport const ExpenseAppContext = \n  createContext< ExpenseContextValues | null>(null);\n\n","import React from 'react'\n\nexport const ExpensesDate:React.FC <{date: Date}>= ({ date }) => {\n  \n  const transFormDate = new Date(date)\n  const month = transFormDate.toLocaleString('de-CH', { month: 'long' });\n  const day = transFormDate.toLocaleString('de-CH', { day: '2-digit' });\n  const year = transFormDate.toLocaleString('de-CH', { year: 'numeric'});\n  return (\n    <div>\n      <div className=\"expense-item__date\">\n        <div className=\"expense-item__date--month\">{month}, </div>\n        <div className=\"expense-item__date--day\">{day}</div>\n        <div className=\"expense-item__date--year\">{year}</div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ExpensesDate } from '../expenses-date/ExpensesDate'\nimport {ExpenseItems} from '../../services/expensesService/useExpenseService'\n\ninterface ExpenseItemsAction extends ExpenseItems {\n  dispatchExpense?:  React.Dispatch<{\n    type: string;\n    payload: ExpenseItems;\n}>\n}\n\nexport const ExpensesItem:React.FC<ExpenseItemsAction>  = ({date, expense, price, dispatchExpense }) => {\n\n  const clickExpenseItemHandler = (e:React.MouseEvent) => {\n    console.log('me clicke desde el item')\n  }\n  return (\n    <div onClick={clickExpenseItemHandler} className=\"expense-item\">\n      <ExpensesDate date={date}></ExpensesDate>\n      <div className=\"expense-item__description\">\n        <h2>{expense}</h2>\n      </div>\n      <div className=\"expense-item__price\">\n        {price}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {ExpenseItems} from '../../services/expensesService/useExpenseService'\ninterface ExpenseCardProps {\n  children: React.ReactNode,\n  className: string,\n  dispatchExpense?:  React.Dispatch<{\n    type: string;\n    payload: ExpenseItems;\n}>\n  // setExpensesResults: React.Dispatch<React.SetStateAction<ExpenseItems[]>>\n}\n\n\nexport const ExpensesCard: React.FC<ExpenseCardProps> = ({children, className, dispatchExpense }) => {\n\n  \n\n  const classes = className\n  const clickItemParentHandler = (e:React.MouseEvent) => {\n    const currentElement = e.target as HTMLDivElement\n    const expenseElement = currentElement.closest('.expense-item')\n    console.log(expenseElement)\n  }\n  return (\n    <div onClick={(e)=> clickItemParentHandler(e) } className={classes}>\n      {children}\n    </div>\n  )\n}\n","export class ExpenseModel {\n\n  id: number;\n\n  constructor( public date: Date, public expense: string, public price: number) {\n    this.date = new Date(date);\n    this.expense = expense;\n    this.price = price;\n    this.id = new Date().getMilliseconds();\n  }\n}","import { useState } from 'react';\nimport { ExpenseModel } from '../../classes/expenseModel';\nimport { useForm, Validatable } from '../../hooks/useForm';\nexport interface ExpenseForm {\n  expense: string,\n  date: Date,\n  price: number\n}\nexport interface NewExpense {\n  id: number\n  expense: string,\n  date: Date,\n  price: number\n}\nexport const ExpenseForms = ({ onSubmittedExpense }: { onSubmittedExpense: (expenseForm: NewExpense) => void }) => {\n\n  const { formValues, handleInputChange, reset, customValidator } = useForm<ExpenseForm>({ expense: '', date: new Date(), price: 0.1 })\n  const { expense, date, price } = formValues;\n  const [hideForm, setHideForm] = useState(true)\n\n  const buttonFormHandler =<div className=\"expense-form__action expense-form__action--menu\"><button onClick={()=> setHideForm(false)} className=\"btn btn--expense-form btn--expense--menu\"> Add Expense </button></div> \n\n  const expenseIsValid: Validatable = {\n    value: expense,\n    required: true,\n    minLength: 3\n  }\n  const priceIsValid: Validatable = {\n    value: price,\n    required: true,\n    min: 0.1\n  }\n  const dateIsValid: Validatable = {\n    value: date,\n    required: true\n  }\n  const submitHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('me submité patata');\n    if (!customValidator(expenseIsValid) || !customValidator(priceIsValid) || !customValidator(dateIsValid)) return alert('Field no valido')\n\n    const newExpense = new ExpenseModel(new Date(date), expense, price)\n    onSubmittedExpense(newExpense);\n\n    reset()\n  }\n\n\n  return (\n\n    <form onSubmit={submitHandler} className=\"expense-form\">\n      {hideForm ? buttonFormHandler :\n      <div className=\"expense-form__controls\">\n      <div className=\"expense-form__control\">\n        <label htmlFor=\"expense\">Title</label>\n        <input\n          name='expense'\n          value={expense}\n          onChange={handleInputChange}\n          placeholder=\"Expense\"\n          id=\"expense\"\n          type=\"text\" />\n      </div>\n      <div className=\"expense-form__control\">\n        <label htmlFor=\"price\">Amount</label>\n        <input\n          id=\"price\"\n          value={price}\n          name=\"price\"\n          onChange={handleInputChange}\n          placeholder=\"Amount\"\n          type=\"number\"\n          min=\"0.01\"\n          step=\"0.01\" />\n      </div>\n      <div className=\"expense-form__control\">\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          value={(typeof date !== 'string') ? `${date.getFullYear()}-${date.toLocaleString('de-CH', { month: '2-digit'})}-${date.toLocaleString('de-CH', {day: '2-digit'})}` : date }\n          name=\"date\"\n          onChange={handleInputChange}\n          type=\"date\"\n          min=\"2019-01-01\"\n          max=\"2022-12-31\" />\n      </div>\n      <div className=\"expense-form__action\">\n        <button className=\"btn btn--expense-form\" type=\"submit\"> Add </button>\n        <button onClick={()=>setHideForm(true)} className=\"btn btn--expense-form btn--expense-form--cancel\"> Cancel </button>\n      </div>\n    </div>\n      }\n      \n    </form>\n  )\n}\n","import { ChangeEvent, useState } from 'react'\nexport interface Validatable {\n  value: string | number | Date;\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  min?: number;\n  max?: number;\n}\nexport const useForm = <T extends Object>(initialState: T) => {\n  const [formValues, setFormValues] = useState(initialState);\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = target\n\n    setFormValues((prevValues) => {\n      return {\n        ...prevValues,\n        [name]: value\n      }\n    })\n  }\n  const reset = (newFormState = initialState) => {\n    setFormValues(newFormState)\n  }\n\n  const customValidator = (validableInput: Validatable) => {\n    let isValid = true;\n    if (validableInput.required) {\n      isValid = isValid && validableInput.value.toString().trim().length !== 0;\n    }\n    if (validableInput.minLength != null && typeof validableInput.value === 'string') {\n      isValid = isValid && validableInput.value.length > validableInput.minLength\n    }\n    if (validableInput.maxLength != null && typeof validableInput.value === 'string') {\n      isValid = isValid && validableInput.value.length < validableInput.maxLength\n    }\n    if (validableInput.min != null && typeof validableInput.value === 'number') {\n      isValid = isValid && validableInput.value > validableInput.min;\n    }\n    if (validableInput.max != null && typeof validableInput.value === 'number') {\n      isValid = isValid && validableInput.value < validableInput.max\n    }\n    return isValid\n\n  }\n\n  return { formValues, handleInputChange, reset, customValidator }\n}","import React, { useContext } from 'react'\nimport { ExpenseAppContext } from '../../contexts/ExpenseAppContext';\nimport { expenseAction } from '../../reducers/expenseActions';\nimport { ExpenseForms, NewExpense } from '../expenses-form/ExpenseForms'\n\n\nexport const NewExpenses = () => {\n  const ExpenseContext = useContext(ExpenseAppContext)!;\n  const { dispatchExpense } = ExpenseContext;\n\n\n  const onSubmittedExpense = (expense: NewExpense) => {\n\n    const value = expenseAction('addExpense', expense);\n    dispatchExpense(value!)\n  }\n  return (\n    <div className=\"newExpense\">\n      <ExpenseForms onSubmittedExpense={onSubmittedExpense}></ExpenseForms>\n    </div>\n  )\n}\n","import { ExpenseItems } from \"../services/expensesService/useExpenseService\";\n\nexport const expenseAction = (type:string, expense:ExpenseItems) => {\n\n  if(type === 'addExpense') {\n    return {\n      type,\n      payload: expense\n    }\n  } else {\n    return \n  }\n\n}","import React from 'react'\n\nexport const ExpenseFilter = ({onSetYear, filterYear}:{onSetYear:(year: string) => void, filterYear:string}) => {\n\n\n  return (\n    <div className=\"expense-filter\">\n      <div className=\"expense-filter__control\">\n        <label>Filter By Year</label>\n        <select  value={filterYear} onChange={(e) => onSetYear(e.target.value)}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const ChartBar = ({value, label, maxValue}:{value:any, label:string, maxValue: any}) => {\n\n  // console.log(value)\n  let valueWith = '0%';\n  if(maxValue > 0) {\n    valueWith = Math.round((value / maxValue * 100)) + '%';\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__content\">\n        <div style={{height: valueWith}} className=\"chart-bar__fill\">\n\n        </div>\n      </div>\n        <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { GraphicPoints } from '../expense-graphic/ExpenseGraphic'\nimport { ChartBar } from './ChartBar'\n\nexport const Chart = ({dataGraphicPoints}:{dataGraphicPoints: GraphicPoints[]}) => {\n\n  const valuesArr = dataGraphicPoints.map(dataP =>{\n    return dataP.value\n  } )\n  const totalMaximun = Math.max(...valuesArr)\n\n  return (\n    <div className=\"chart-container\">\n      {dataGraphicPoints.map((dataP:any) =>  <ChartBar \n        key={dataP.label} \n        value={dataP.value} \n        maxValue={totalMaximun} \n        label={dataP.label}></ChartBar>)}\n    </div>\n  )\n}\n","import React from 'react'\nimport { ExpenseItems } from '../../services/expensesService/useExpenseService'\nimport { Chart } from '../graphic/Chart'\nexport interface GraphicPoints {\n  label: string,\n  value: number\n}\nexport const ExpenseGraphic = ({filteredExpenseResults}:{filteredExpenseResults:ExpenseItems[]}) => {\n  const dataGraphicPoints:GraphicPoints[] = [\n    {label: 'Jan', value: 0},\n    {label: 'Feb', value: 0},\n    {label: 'Mar', value: 0},\n    {label: 'Apr', value: 0},\n    {label: 'May', value: 0},\n    {label: 'Jul', value: 0},\n    {label: 'Aug', value: 0},\n    {label: 'Sep', value: 0},\n    {label: 'Oct', value: 0},\n    {label: 'Nov', value: 0},\n    {label: 'Dec', value: 0},\n  ]\n\n  for (const expense of filteredExpenseResults) {\n    const expenseMonth = new Date(expense.date).getMonth()\n    dataGraphicPoints[expenseMonth].value += Number(expense.price);\n  }\n\n  return <Chart dataGraphicPoints={dataGraphicPoints}></Chart>\n}\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport { ExpenseAppContext } from '../../contexts/ExpenseAppContext'\nimport { ExpensesItem } from '../../components/expenses-item/ExpensesItem'\nimport { ExpensesCard } from '../../components/expensesCard/ExpensesCard'\nimport { NewExpenses } from '../../components/newExpense/NewExpenses'\nimport { ExpenseFilter } from '../../components/expense-filter/ExpenseFilter'\nimport { ExpenseGraphic } from '../../components/expense-graphic/ExpenseGraphic'\n\n\nexport const MainPage = () => {\n\n  const ExpenseContext = useContext(ExpenseAppContext)!;\n  const { expenseResults, dispatchExpense } = ExpenseContext;\n  const [filterYear, setFilterYear] = useState('2021')\n\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenseResults));\n  }, [expenseResults])\n\n  const filteredExpenseResults = expenseResults.filter(exp => new Date(exp.date).getFullYear() === +filterYear)\n\n\n  const onSetYear = (year: string) => {\n    setFilterYear(year);\n  }\n\n  let expenseListContent: any = \n    <div className=\"message-filter\">\n      <p className=\"message-filter__notFound\"> No expenses registered </p>\n    </div> as JSX.Element\n\n  if(filteredExpenseResults.length > 0 ) {\n    expenseListContent = filteredExpenseResults.map(({ id, expense, price, date }) => {\n      return <ExpensesItem\n        dispatchExpense={dispatchExpense}\n        key={id}\n        expense={expense}\n        price={price}\n        date={date}\n      ></ExpensesItem> \n    })\n  }\n\n  return (\n    <div className=\"main\">\n      <ExpensesCard className=\"container\">\n        <ExpenseFilter filterYear={filterYear} onSetYear={onSetYear}></ExpenseFilter>\n        <ExpenseGraphic filteredExpenseResults={filteredExpenseResults}></ExpenseGraphic>\n        <NewExpenses></NewExpenses>\n        {expenseListContent}\n      </ExpensesCard>\n    </div>\n  )\n}\n","import { ExpenseItems } from \"../services/expensesService/useExpenseService\"\n\n\nexport const expenseReducer = (state: ExpenseItems[] = [], { type, payload }\n  : { type: string, payload: ExpenseItems }) => {\n  switch (type) {\n    case 'addExpense':\n      state = [payload,...state]\n      break;\n    default:\n      return state\n  }\n  return state\n}","\nexport interface ExpenseItems {\n  id?: number\n  date: Date,\n  expense: string,\n  price:number\n}\n\n\nexport const useExpenseService = () => {\n  //LOAD THE DATA API\n  const expensesAPI: ExpenseItems[] = []\n  return {expensesAPI}\n\n}\n","import React, { useReducer } from 'react'\nimport { ExpenseAppContext } from './contexts/ExpenseAppContext'\nimport { MainPage } from './pages/MainPage/MainPage'\nimport { expenseReducer } from './reducers/expenseReducer'\nimport { useExpenseService } from './services/expensesService/useExpenseService'\n\nexport const ExpensesApp = () => {\n\n  const initialExpenses = () => JSON.parse(localStorage.getItem('expenses')!) || [];\n\n  const [expenseResults, dispatchExpense] = useReducer(expenseReducer, useExpenseService().expensesAPI, initialExpenses)\n  return (\n    <div>\n      <ExpenseAppContext.Provider value={{expenseResults, dispatchExpense, useExpenseService}}>\n        <MainPage></MainPage>\n      </ExpenseAppContext.Provider>\n\n    </div>\n  )\n}\n\n","import ReactDOM from 'react-dom';\nimport {ExpensesApp} from './ExpensesApp';\nimport './css/styles.css'\n\n\nReactDOM.render(<ExpensesApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}